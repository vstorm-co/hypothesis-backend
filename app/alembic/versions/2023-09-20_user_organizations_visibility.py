"""user_organizations_visibility

Revision ID: 7c067781d750
Revises: c7cfc0dbb74d
Create Date: 2023-09-20 18:42:54.501403

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7c067781d750"
down_revision = "c7cfc0dbb74d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organization_admin",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("organization_uuid", postgresql.UUID(), nullable=True),
        sa.Column("auth_user_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth_user.id"],
            name=op.f("organization_admin_auth_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organization.uuid"],
            name=op.f("organization_admin_organization_uuid_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organization_admin_pkey")),
        sa.UniqueConstraint(
            "organization_uuid", "auth_user_id", name="uq_org_admin_org_user"
        ),
    )
    op.create_table(
        "organization_user",
        sa.Column("id", sa.Integer(), sa.Identity(always=False), nullable=False),
        sa.Column("organization_uuid", postgresql.UUID(), nullable=True),
        sa.Column("auth_user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auth_user_id"],
            ["auth_user.id"],
            name=op.f("organization_user_auth_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["organization_uuid"],
            ["organization.uuid"],
            name=op.f("organization_user_organization_uuid_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("organization_user_pkey")),
        sa.UniqueConstraint(
            "organization_uuid", "auth_user_id", name="uq_org_user_org_user"
        ),
    )
    op.drop_constraint(
        "auth_user_organization_uuid_fkey", "auth_user", type_="foreignkey"
    )
    op.drop_column("auth_user", "organization_uuid")
    op.add_column("organization", sa.Column("picture", sa.String(), nullable=True))
    op.add_column(
        "organization",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
    )
    op.alter_column("organization", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.create_unique_constraint(op.f("organization_name_key"), "organization", ["name"])
    op.add_column(
        "room", sa.Column("organization_uuid", postgresql.UUID(), nullable=True)
    )
    op.create_foreign_key(
        op.f("room_organization_uuid_fkey"),
        "room",
        "organization",
        ["organization_uuid"],
        ["uuid"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("room_organization_uuid_fkey"), "room", type_="foreignkey")
    op.drop_column("room", "organization_uuid")
    op.drop_constraint(op.f("organization_name_key"), "organization", type_="unique")
    op.alter_column("organization", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_column("organization", "created_at")
    op.drop_column("organization", "picture")
    op.add_column(
        "auth_user",
        sa.Column(
            "organization_uuid", postgresql.UUID(), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "auth_user_organization_uuid_fkey",
        "auth_user",
        "organization",
        ["organization_uuid"],
        ["uuid"],
    )
    op.drop_table("organization_user")
    op.drop_table("organization_admin")
    # ### end Alembic commands ###
